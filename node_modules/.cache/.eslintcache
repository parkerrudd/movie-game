[{"/Users/parkerrudd/the-movie-game/src/index.js":"1","/Users/parkerrudd/the-movie-game/src/App.js":"2","/Users/parkerrudd/the-movie-game/src/reportWebVitals.js":"3","/Users/parkerrudd/the-movie-game/src/GuessTable.js":"4","/Users/parkerrudd/the-movie-game/src/RowEight.js":"5","/Users/parkerrudd/the-movie-game/src/RowFive.js":"6","/Users/parkerrudd/the-movie-game/src/RowFour.js":"7","/Users/parkerrudd/the-movie-game/src/RowOne.js":"8","/Users/parkerrudd/the-movie-game/src/RowSeven.js":"9","/Users/parkerrudd/the-movie-game/src/RowSix.js":"10","/Users/parkerrudd/the-movie-game/src/RowThree.js":"11","/Users/parkerrudd/the-movie-game/src/RowTwo.js":"12","/Users/parkerrudd/the-movie-game/src/WinPage.js":"13","/Users/parkerrudd/the-movie-game/src/letters.js":"14","/Users/parkerrudd/the-movie-game/src/Navbar.js":"15","/Users/parkerrudd/the-movie-game/src/Instructions.js":"16","/Users/parkerrudd/the-movie-game/src/Settings.js":"17"},{"size":535,"mtime":1655428554781,"results":"18","hashOfConfig":"19"},{"size":6879,"mtime":1655429407625,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1655428554782,"results":"21","hashOfConfig":"19"},{"size":15222,"mtime":1655428734926,"results":"22","hashOfConfig":"19"},{"size":1938,"mtime":1655428775941,"results":"23","hashOfConfig":"19"},{"size":1931,"mtime":1655428793113,"results":"24","hashOfConfig":"19"},{"size":1931,"mtime":1655428820978,"results":"25","hashOfConfig":"19"},{"size":1919,"mtime":1655428840073,"results":"26","hashOfConfig":"19"},{"size":1938,"mtime":1655428854796,"results":"27","hashOfConfig":"19"},{"size":1924,"mtime":1655428870164,"results":"28","hashOfConfig":"19"},{"size":1938,"mtime":1655428885974,"results":"29","hashOfConfig":"19"},{"size":1924,"mtime":1655428917358,"results":"30","hashOfConfig":"19"},{"size":809,"mtime":1655428946042,"results":"31","hashOfConfig":"19"},{"size":721,"mtime":1655428986695,"results":"32","hashOfConfig":"19"},{"size":2057,"mtime":1655429074272,"results":"33","hashOfConfig":"19"},{"size":911,"mtime":1655429060745,"results":"34","hashOfConfig":"19"},{"size":896,"mtime":1655429043567,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4er54",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"/Users/parkerrudd/the-movie-game/src/index.js",[],[],"/Users/parkerrudd/the-movie-game/src/App.js",["100","101","102","103","104","105","106","107","108","109"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css'; \nimport Letters from \"./letters\";\nimport GuessTable from \"./GuessTable\";\nimport WinPage from \"./WinPage\";\nimport Navbar from \"./Navbar\";\nimport SuperHeroMovies from './SuperHeroMovies.json'; \n\n\nfunction App() {\n  const [current, setCurrent] = useState();\n  const [guessCount, setGuessCount] = useState(0); \n  \n\n  const [correctTitle, setCorrectTitle] = useState(\"\"); \n  const [correctID, setCorrectID] = useState(\"\"); \n\n\n  //GENERATE STARTING POINT\n  // const [startingMovie, setStartingMovie] = useState(firstMovie)\n  // const superHeroMovies = JSON.parse(SuperHeroMovies); \n  const firstMovie = ['Iron Man', 'Avatar', 'Titanic', 'Shawshank Redemption', 'Reservoir Dogs', 'Groundhog Day', 'Paddington 2', 'Amelie', 'Brokeback Mountain', 'Donnie Darko', 'Scott Pilgrim Vs. The World', 'Portrait Of A Lady On Fire', 'LÃ©on', 'Logan', 'The Terminator', 'No Country For Old Men', 'Titanic', 'The Exorcist', 'Black Panther', 'Shaun Of The Dead' ]\n  let day = 0; \n  var today = new Date();\n  var clock = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  const [time, setTime] = useState(\"\"); \n\n\n//CLOCK \n  // useEffect(() => {\n  //   if (clock === \"18:30:5\") { \n  //     setWinPage(false); \n  //     setDay(day + 1); \n  //     window.location.reload(); \n  //   }\n  // }, [time])\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setTime(clock); \n  //     console.log('This will run every second!');\n  //   }, 1000);\n  //   return () => clearInterval(interval);\n  // }, [clock]);\n\n  useEffect(() => {\n    day = (Math.floor(Math.random() * firstMovie.length))\n    var axios = require('axios');\n    var config = {\n      method: 'get',\n      url: `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false`,\n      params: {query: firstMovie[day]}\n    };\n    \n    axios(config)\n    .then(function (response) {\n      setCurrent(response.data.results[0].title);\n      setCorrectTitle(response.data.results[0].title)\n      setCorrectID(response.data.results[0].id)\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }, []); \n\n    const [movie, setMovie] = useState(''); \n    const [guessMovieID, setGuessMovieID] = useState(''); \n    const [guess, setGuess] = useState(); \n \n    //GET MOVIE GUESS AND SET ID\n    const getInputValue = (event) => {\n        setMovie(event.target.value); \n    }; \n\n    const movieQuery = () => {\n      const axios = require('axios');\n\n      let config = {\n        method: 'get',\n        url: `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false`,\n        params: {query: movie}, \n        \n      };\n      \n      axios(config)\n      .then((response) => {\n        setGuessMovieID(response.data.results[0].id);\n        setGuessCount(guessCount + 1)\n      })\n      .catch((error) => {\n        console.log(error);\n      }); \n    }; \n\n    const [correctYear, setCorrectYear] = useState(\"\"); \n    const [correctCompany, setCorrectCompany] = useState(\"\"); \n    const [correctGenre, setCorrectGenre] = useState(\"\"); \n    const [moviePoster, setMoviePoster] = useState(\"\"); \n\n\n    //GET CORRECT MOVIE DETAILS\n    useEffect(() => {\n      const axios = require('axios');\n\n      let config = {\n      method: 'get',\n      url: `https://api.themoviedb.org/3/movie/${correctID}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`,\n      params: {}\n      };\n\n      axios(config)\n      .then((response) => {\n        setCorrectYear(response.data.release_date.slice(0, 4))\n        setCorrectGenre(response.data.genres[0].name)\n        setCorrectCompany(response.data.production_companies[0].name)\n        setMoviePoster(response.data.poster_path)\n      })\n      .catch((error) => {\n      console.log(error);\n      });\n\n    }, [correctID])\n\n    const [correctDirector, setCorrectDirector] = useState(\"\"); \n    const [correctActors, setCorrectActors] = useState([]); \n\n    useEffect(() => {\n      const axios = require('axios');\n\n      let config = {\n      method: 'get',\n      url: `https://api.themoviedb.org/3/movie/${correctID}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`,\n      };\n\n      axios(config)\n      .then((response) => {\n          const credits = response.data.crew\n          let correctActorsArr = []; \n          const cast = response.data.cast\n          for (let i = 0; i < cast.length; i++) {\n            correctActorsArr.push(cast[i].name)\n          }\n          setCorrectActors(correctActorsArr)\n          let director = \"\"; \n          for (let i = 0; i < credits.length; i++) {\n              if (credits[i].job === \"Director\") {\n                  let director = credits[i].name\n                  setCorrectDirector(director)\n                }      \n          };\n          \n      })\n      .catch((error) => {\n      console.log(error);\n      });\n\n  }, [correctID]); \n\n  //RESET GAME\n  const [winPage, setWinPage] = useState(false); \n  const [playAgain, setPlayAgain] = useState(false); \n\n  useEffect(() => {\n    if (correctTitle != null) setWinPage(false)\n\n  }, [correctTitle])\n\n  useEffect(() => {\n    setGuessMovieID('')\n    setWinPage(false)\n  \n  }, [])\n\n  useEffect(() => {\n    if (correctID === guessMovieID && guessCount > 0) {\n    setWinPage(true);\n    // setPlayAgain(false);\n  \n  }\n  }, [guessMovieID])\n\n  useEffect(() => {\n    if (playAgain === true) {\n      window.location.reload()\n      setWinPage(false);\n\n    }\n  }, [playAgain])\n\n  useEffect(() => {\n    if (guessCount === 8) {\n      setWinPage(true)\n    }\n  }, [guessCount])\n\n  return (\n    <div className=\"App\">\n      <Navbar  />\n      <div className=\"guess-section\">  \n        <h1 id=\"the\">The</h1>\n        <Letters/>\n        <h1 id=\"game\">Game</h1>\n  \n          <h2 id=\"guess-count\">Guess Count: {guessCount}/8</h2>\n        \n            <div>\n                <div className=\"search-container\">\n                    <input onChange={getInputValue} className=\"actors-searchbar\" autoComplete=\"list\" type=\"text\" list=\"search-suggestions\" placeholder=\"Search Movies...\" required/>\n                    <button onClick={movieQuery} className=\"actor-search-btn\">Guess</button>\n                </div>\n\n            </div>\n      </div>   \n      { winPage ? <WinPage updatePlayAgain={playAgain => setPlayAgain(playAgain)} time={clock} guessCount={guessCount} correctTitle={correctTitle} moviePoster={moviePoster}/> : null }\n\n        <GuessTable  time={clock} movieID={guessMovieID} guessCount={guessCount} \n        correctActors={correctActors} correctCompany={correctCompany} correctDirector={correctDirector}\n        correctGenre={correctGenre} correctTitle={correctTitle} correctYear={correctYear} moviePoster={moviePoster}/> \n    </div>\n  );\n}\n\nexport default App;\n","/Users/parkerrudd/the-movie-game/src/reportWebVitals.js",[],[],"/Users/parkerrudd/the-movie-game/src/GuessTable.js",["110","111","112"],[],"import React, { useEffect, useState } from \"react\";\nimport RowOne from \"./RowOne\";\nimport RowTwo from \"./RowTwo\";\nimport RowThree from \"./RowThree\";\nimport RowFour from \"./RowFour\";\nimport RowFive from \"./RowFive\";\nimport RowSix from \"./RowSix\";\nimport RowSeven from \"./RowSeven\";\nimport RowEight from \"./RowEight\";\nimport WinPage from \"./WinPage\";\n\nfunction GuessTable(props) {\n    //FIRST GUESS \n    const [filmTitle, setFilmTitle] = useState(\"\"); \n    const [year, setYear] = useState(\"\"); \n    const [genre, setGenre] = useState(\"\"); \n    const [company, setCompany] = useState(\"\"); \n    const [actors, setActors] = useState([]); \n    const [director, setDirector] = useState(\"\"); \n\n    //SECOND GUESS  \n    const [secondFilmTitle, setSecondFilmTitle] = useState(\"\"); \n    const [secondYear, setSecondYear] = useState(\"\"); \n    const [secondGenre, setSecondGenre] = useState(\"\"); \n    const [secondCompany, setSecondCompany] = useState(\"\"); \n    const [secondActors, setSecondActors] = useState([]); \n    const [secondDirector, setSecondDirector] = useState(\"\"); \n\n    //THIRD GUESS  \n    const [thirdFilmTitle, setThirdFilmTitle] = useState(\"\"); \n    const [thirdYear, setThirdYear] = useState(\"\"); \n    const [thirdGenre, setThirdGenre] = useState(\"\"); \n    const [thirdCompany, setThirdCompany] = useState(\"\"); \n    const [thirdActors, setThirdActors] = useState([]); \n    const [thirdDirector, setThirdDirector] = useState(\"\"); \n\n    //FOURTH GUESS  \n    const [fourthFilmTitle, setFourthFilmTitle] = useState(\"\"); \n    const [fourthYear, setFourthYear] = useState(\"\"); \n    const [fourthGenre, setFourthGenre] = useState(\"\"); \n    const [fourthCompany, setFourthCompany] = useState(\"\"); \n    const [fourthActors, setFourthActors] = useState([]); \n    const [fourthDirector, setFourthDirector] = useState(\"\"); \n\n    //FIFTH GUESS  \n    const [fifthFilmTitle, setFifthFilmTitle] = useState(\"\"); \n    const [fifthYear, setFifthYear] = useState(\"\"); \n    const [fifthGenre, setFifthGenre] = useState(\"\"); \n    const [fifthCompany, setFifthCompany] = useState(\"\"); \n    const [fifthActors, setFifthActors] = useState([]); \n    const [fifthDirector, setFifthDirector] = useState(\"\"); \n\n    //SIXTH GUESS  \n    const [sixthFilmTitle, setSixthFilmTitle] = useState(\"\"); \n    const [sixthYear, setSixthYear] = useState(\"\"); \n    const [sixthGenre, setSixthGenre] = useState(\"\"); \n    const [sixthCompany, setSixthCompany] = useState(\"\"); \n    const [sixthActors, setSixthActors] = useState([]); \n    const [sixthDirector, setSixthDirector] = useState(\"\"); \n\n    //SEVENTH GUESS  \n    const [seventhFilmTitle, setSeventhFilmTitle] = useState(\"\"); \n    const [seventhYear, setSeventhYear] = useState(\"\"); \n    const [seventhGenre, setSeventhGenre] = useState(\"\"); \n    const [seventhCompany, setSeventhCompany] = useState(\"\"); \n    const [seventhActors, setSeventhActors] = useState([]); \n    const [seventhDirector, setSeventhDirector] = useState(\"\"); \n\n    //EIGHTH GUESS  \n    const [eighthFilmTitle, setEighthFilmTitle] = useState(\"\"); \n    const [eighthYear, setEighthYear] = useState(\"\"); \n    const [eighthGenre, setEighthGenre] = useState(\"\"); \n    const [eighthCompany, setEighthCompany] = useState(\"\"); \n    const [eighthActors, setEighthActors] = useState([]); \n    const [eighthDirector, setEighthDirector] = useState(\"\"); \n\n    //GET DETAILS\n    useEffect(() => {\n        const axios = require('axios');\n\n        let config = {\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${props.movieID}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`,\n        params: {}\n        };\n\n        axios(config)\n        .then((response) => {\n            if (props.guessCount < 2) {    \n                setFilmTitle(response.data.title);\n                setYear(response.data.release_date.slice(0, 4))\n                setGenre(response.data.genres[0].name)\n                setCompany(response.data.production_companies[0].name)\n            } else if (props.guessCount < 3) {\n                setSecondFilmTitle(response.data.title);\n                setSecondYear(response.data.release_date.slice(0, 4))\n                setSecondGenre(response.data.genres[0].name)\n                setSecondCompany(response.data.production_companies[0].name) \n            } else if (props.guessCount < 4) {\n                setThirdFilmTitle(response.data.title);\n                setThirdYear(response.data.release_date.slice(0, 4))\n                setThirdGenre(response.data.genres[0].name)\n                setThirdCompany(response.data.production_companies[0].name) \n            }  else if (props.guessCount < 5) {\n                setFourthFilmTitle(response.data.title);\n                setFourthYear(response.data.release_date.slice(0, 4))\n                setFourthGenre(response.data.genres[0].name)\n                setFourthCompany(response.data.production_companies[0].name) \n            }   else if (props.guessCount < 6) {\n                setFifthFilmTitle(response.data.title);\n                setFifthYear(response.data.release_date.slice(0, 4))\n                setFifthGenre(response.data.genres[0].name)\n                setFifthCompany(response.data.production_companies[0].name) \n            } else if (props.guessCount < 7) {\n                setSixthFilmTitle(response.data.title);\n                setSixthYear(response.data.release_date.slice(0, 4))\n                setSixthGenre(response.data.genres[0].name)\n                setSixthCompany(response.data.production_companies[0].name) \n            } else if (props.guessCount < 8) {\n                setSeventhFilmTitle(response.data.title);\n                setSeventhYear(response.data.release_date.slice(0, 4))\n                setSeventhGenre(response.data.genres[0].name)\n                setSeventhCompany(response.data.production_companies[0].name) \n            } else if (props.guessCount < 9) {\n                setEighthFilmTitle(response.data.title);\n                setEighthYear(response.data.release_date.slice(0, 4))\n                setEighthGenre(response.data.genres[0].name)\n                setEighthCompany(response.data.production_companies[0].name) \n            }\n        })\n        .catch((error) => {\n        console.log(error);\n        });\n\n    }, [props.movieID])\n\n    //GET CREDITS\n    useEffect(() => {\n        const axios = require('axios');\n\n        let config = {\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${props.movieID}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`,\n        };\n\n        axios(config)\n        .then((response) => {\n            if (props.guessCount < 2 ){\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setDirector(director)\n                }      \n            };\n        } else if (props.guessCount < 3) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setSecondActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setSecondDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 4) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setThirdActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setThirdDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 5) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setFourthActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setFourthDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 6) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setFifthActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setFifthDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 7) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setSixthActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setSixthDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 8) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setSeventhActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setSeventhDirector(director)\n                }      \n            };  \n        } else if (props.guessCount < 9) {\n            const cast = response.data.cast\n            let actorsArr = []; \n            for (let i = 0; i < cast.length; i++) {\n                actorsArr.push(cast[i].name)\n            }\n            setEighthActors(actorsArr)\n            const credits = response.data.crew \n            for (let i = 0; i < credits.length; i++) {\n                if (credits[i].job === \"Director\") {\n                    let director = credits[i].name\n                    setEighthDirector(director) \n                }      \n            };  \n        }\n        })\n        .catch((error) => {\n        console.log(error);\n        });\n\n    }, [props.movieID])\n\n    return (\n        <div className=\"table-section\">\n        <table className=\"table\">\n            <tr id=\"headers\"> \n                <th>Title</th>\n                <th>Director</th>\n                <th>Cast</th>\n                <th>Genre</th>\n                <th>Company</th>\n                <th>Year</th>\n            </tr>\n\n          {props.guessCount > 0 ? <RowOne guessCount={props.guessCount} filmTitle={filmTitle} director={director} actors={actors} genre={genre} company={company} year={year}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 1 ? <RowTwo guessCount={props.guessCount} filmTitle={secondFilmTitle} director={secondDirector} actors={secondActors} genre={secondGenre} company={secondCompany} year={secondYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n            \n          {props.guessCount > 2 ? <RowThree guessCount={props.guessCount} filmTitle={thirdFilmTitle} director={thirdDirector} actors={thirdActors} genre={thirdGenre} company={thirdCompany} year={thirdYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 3 ? <RowFour guessCount={props.guessCount} filmTitle={fourthFilmTitle} director={fourthDirector} actors={fourthActors} genre={fourthGenre} company={fourthCompany} year={fourthYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 4 ? <RowFive guessCount={props.guessCount} filmTitle={fifthFilmTitle} director={fifthDirector} actors={fifthActors} genre={fifthGenre} company={fifthCompany} year={fifthYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 5 ? <RowSix guessCount={props.guessCount} filmTitle={sixthFilmTitle} director={sixthDirector} actors={sixthActors} genre={sixthGenre} company={sixthCompany} year={sixthYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 6 ? <RowSeven guessCount={props.guessCount} filmTitle={seventhFilmTitle} director={seventhDirector} actors={seventhActors} genre={seventhGenre} company={seventhCompany} year={seventhYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n\n          {props.guessCount > 7 ? <RowEight guessCount={props.guessCount} filmTitle={eighthFilmTitle} director={eighthDirector} actors={eighthActors} genre={eighthGenre} company={eighthCompany} year={eighthYear}\n          correctActors={props.correctActors} correctDirector={props.correctDirector} correctTitle={props.correctTitle}\n          correctCompany={props.correctCompany} correctGenre={props.correctGenre} correctYear={props.correctYear}/> : null} \n        </table>\n        </div>\n    ) \n}\n\nexport default GuessTable; \n","/Users/parkerrudd/the-movie-game/src/RowEight.js",["113","114"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowEight(props) {\n    const [actorsInBothMoviesEight, setActorsInBothMoviesEight] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesEight(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesEight.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesEight.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowEight; ","/Users/parkerrudd/the-movie-game/src/RowFive.js",["115","116"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowFive(props) {\n    const [actorsInBothMoviesFive, setActorsInBothMoviesFive] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesFive(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesFive.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesFive.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowFive; ","/Users/parkerrudd/the-movie-game/src/RowFour.js",["117","118"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowFour(props) {\n    const [actorsInBothMoviesFour, setActorsInBothMoviesFour] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesFour(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesFour.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesFour.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowFour; ","/Users/parkerrudd/the-movie-game/src/RowOne.js",["119","120"],[],"import React, { useEffect, useState } from \"react\";\n\nconst RowOne = (props) => {\n\n    const [actorsInBothMovies, setActorsInBothMovies] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMovies(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n    \n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMovies.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMovies.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear ? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n\n    )\n}\n\nexport default RowOne;","/Users/parkerrudd/the-movie-game/src/RowSeven.js",["121","122"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowSeven(props) {\n    const [actorsInBothMoviesSeven, setActorsInBothMoviesSeven] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesSeven(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesSeven.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesSeven.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowSeven; ","/Users/parkerrudd/the-movie-game/src/RowSix.js",["123","124"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowSix(props) {\n    const [actorsInBothMoviesSix, setActorsInBothMoviesSix] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesSix(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesSix.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesSix.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowSix; ","/Users/parkerrudd/the-movie-game/src/RowThree.js",["125","126"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowThree(props) {\n    const [actorsInBothMoviesThree, setActorsInBothMoviesThree] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesThree(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesThree.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesThree.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowThree; ","/Users/parkerrudd/the-movie-game/src/RowTwo.js",["127","128"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction RowTwo(props) {\n    const [actorsInBothMoviesTwo, setActorsInBothMoviesTwo] = useState([])\n    useEffect(() => {\n        let inBoth = []; \n        for (let i = 0; i < props.correctActors.length; i++) {\n            if (props.actors.includes(props.correctActors[i])) {\n            inBoth.push(props.correctActors[i])\n            }\n        }\n      if (inBoth.length > 0) {\n        setActorsInBothMoviesTwo(inBoth)\n      }\n    }, [props.actors])\n\n    return (\n        <tr id=\"results\">\n                {props.filmTitle === props.correctTitle ? <td style={{background:'#549C30'}}>{props.filmTitle}</td> \n                :<td style={{background:'#AA3F44'}}>{props.filmTitle}</td>}\n                {props.director === props.correctDirector ? <td style={{background:'#549C30'}}>{props.director}</td> \n                :<td style={{background:'#AA3F44'}}>{props.director}</td>}\n                {actorsInBothMoviesTwo.length > 0 ? <td style={{background:'#549C30'}}>{JSON.stringify(actorsInBothMoviesTwo.slice(0, 3)).replace(/[\\[\\]']+/g,'').replace(/\"/g, '')}</td> \n                :<td style={{background:'#AA3F44'}}>{props.actors[0]}</td>}\n                {props.genre === props.correctGenre ? <td style={{background:'#549C30'}}>{props.genre}</td> \n                :<td style={{background:'#AA3F44'}}>{props.genre}</td>}\n                {props.company === props.correctCompany ? <td style={{background:'#549C30'}}>{props.company}</td> \n                :<td style={{background:'#AA3F44'}}>{props.company}</td>}\n                {props.year === props.correctYear? <td style={{background:'#549C30'}}>{props.year}</td> \n                : props.year[0] === props.correctYear[0] && props.year[2] === props.correctYear[2] ? <td style={{background:'#f7b500'}}>{props.year}</td> : <td style={{background:'#AA3F44'}}>{props.year}</td>}\n        </tr>\n    )\n}\n\nexport default RowTwo; ","/Users/parkerrudd/the-movie-game/src/WinPage.js",[],[],"/Users/parkerrudd/the-movie-game/src/letters.js",[],[],"/Users/parkerrudd/the-movie-game/src/Navbar.js",["129","130","131","132","133"],[],"import React from \"react\";\nimport './App.css'; \nimport { useState } from \"react\";\nimport { FaQuestionCircle, FaCog, FaToggleOn, FaToggleOff, FaWindowClose } from 'react-icons/fa'; \nimport Instructions from \"./Instructions\";\nimport Settings from \"./Settings\";\n\n\nexport default function Navbar(props) {\n\n    const [questionMark, setQuestionMark] = useState(false)\n    const [settings, setSettings] = useState(false)\n    const [superToggle, setSuperToggle] = useState(false)\n\n\n    return (\n        <div className=\"navbar-container\">\n            <nav className=\"nav\">\n                <ul className=\"nav-list\">\n                    <li id=\"question-mark\">\n                        <a className=\"anchors\" onClick={() => setQuestionMark(!questionMark)} href=\"#\">\n                            <FaQuestionCircle /> \n                        </a>\n                    </li>\n                    <li id=\"cog\">\n                        <a className=\"anchors\" href=\"#\" onClick={() => setSettings(!settings)}>\n                            <FaCog />\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n\n        { questionMark ? <Instructions toggleQuestionMark={questionMark => setQuestionMark(questionMark)}/> : null }\n    {/* settings ? <Settings toggleSettings={settings => setSettings(settings)}/> : null */}\n        \n           { settings ? \n\n                <div className=\"settings-container\">\n                    <a id=\"settings-exit\" href=\"#\" onClick={() => setSettings(!settings)}>\n                        <FaWindowClose />\n                    </a>\n                    <h1>Settings</h1>\n                    <div className=\"supers\">\n                        <h3>Super Hero Movies Only</h3>\n                        <a id=\"toggle-off\" className=\"toggle-super\" href=\"#\" onClick={() => setSuperToggle(!superToggle)}>\n                            { superToggle ? <FaToggleOn /> : <FaToggleOff /> }\n                        </a>\n                    </div>\n                </div>\n            : null\n           } \n\n        </div>\n    )\n}\n","/Users/parkerrudd/the-movie-game/src/Instructions.js",["134"],[],"import React from \"react\";\nimport './App.css'; \nimport { FaWindowClose } from \"react-icons/fa\";\n\nexport default function Instructions(props) {\n    return (\n        <div className=\"instructions-container\">\n            <a id=\"instructions-exit\" href=\"#\" onClick={() => {props.toggleQuestionMark(props.questionMark)}}>\n                <FaWindowClose />\n            </a>\n            <h1>How To Play</h1>\n            <p>The objective is to guess the movie in as few tries as possible</p>\n            <p>Each guess will provide new clues by showing if your guess shares any similarities with the correct movie</p>\n            <p>If the column is red, that category of your guess is incorrect</p>\n            <p>If the year column is yellow, that means that your guess was released in the same decade</p>\n            <p>If the column is green, that category is the same as the correct movie</p>\n        </div> \n    )\n}","/Users/parkerrudd/the-movie-game/src/Settings.js",["135","136","137","138","139","140"],[],"import React from \"react\";\nimport './App.css'; \nimport { FaToggleOff, FaToggleOn, FaWindowClose } from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Settings(props) {\n\n    const [superToggle, setSuperToggle] = useState(false)\n\n    return (\n        // <div className=\"settings-container\">\n        //     <a id=\"settings-exit\" href=\"#\" onClick={() => {props.toggleSettings(props.settings)}}>\n        //         <FaWindowClose />\n        //     </a>\n        //     <h1>Settings</h1>\n        //     <div className=\"supers\">\n        //         <h3>Super Hero Movies Only</h3>\n        //         <a id=\"toggle-off\" className=\"toggle-super\" href=\"#\" onClick={() => setSuperToggle(!superToggle)}>\n        //             { superToggle ? <FaToggleOn /> : <FaToggleOff /> }\n        //         </a>\n        //     </div>\n        // </div>\n        <div></div>\n    )\n}",{"ruleId":"141","severity":1,"message":"142","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":23},{"ruleId":"141","severity":1,"message":"146","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":17},{"ruleId":"141","severity":1,"message":"147","line":27,"column":10,"nodeType":"143","messageId":"144","endLine":27,"endColumn":14},{"ruleId":"141","severity":1,"message":"148","line":27,"column":16,"nodeType":"143","messageId":"144","endLine":27,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":48,"column":12,"nodeType":"151","endLine":48,"endColumn":57},{"ruleId":"141","severity":1,"message":"152","line":69,"column":12,"nodeType":"143","messageId":"144","endLine":69,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":69,"column":19,"nodeType":"143","messageId":"144","endLine":69,"endColumn":27},{"ruleId":"141","severity":1,"message":"154","line":145,"column":15,"nodeType":"143","messageId":"144","endLine":145,"endColumn":23},{"ruleId":"149","severity":1,"message":"155","line":181,"column":6,"nodeType":"156","endLine":181,"endColumn":20,"suggestions":"157"},{"ruleId":"141","severity":1,"message":"158","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":15},{"ruleId":"149","severity":1,"message":"159","line":135,"column":8,"nodeType":"156","endLine":135,"endColumn":23,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"159","line":266,"column":8,"nodeType":"156","endLine":266,"endColumn":23,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":153,"nodeType":"166","messageId":"167","endLine":23,"endColumn":154,"suggestions":"168"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":151,"nodeType":"166","messageId":"167","endLine":23,"endColumn":152,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":151,"nodeType":"166","messageId":"167","endLine":23,"endColumn":152,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"162","line":16,"column":8,"nodeType":"156","endLine":16,"endColumn":22,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"165","line":25,"column":143,"nodeType":"166","messageId":"167","endLine":25,"endColumn":144,"suggestions":"174"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"175"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":153,"nodeType":"166","messageId":"167","endLine":23,"endColumn":154,"suggestions":"176"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":149,"nodeType":"166","messageId":"167","endLine":23,"endColumn":150,"suggestions":"178"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":153,"nodeType":"166","messageId":"167","endLine":23,"endColumn":154,"suggestions":"180"},{"ruleId":"149","severity":1,"message":"162","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":22,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":149,"nodeType":"166","messageId":"167","endLine":23,"endColumn":150,"suggestions":"182"},{"ruleId":"141","severity":1,"message":"183","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":21,"column":25,"nodeType":"186","endLine":21,"endColumn":104},{"ruleId":"184","severity":1,"message":"185","line":26,"column":25,"nodeType":"186","endLine":26,"endColumn":96},{"ruleId":"184","severity":1,"message":"185","line":39,"column":21,"nodeType":"186","endLine":39,"endColumn":91},{"ruleId":"184","severity":1,"message":"185","line":45,"column":25,"nodeType":"186","endLine":45,"endColumn":123},{"ruleId":"184","severity":1,"message":"185","line":8,"column":13,"nodeType":"186","endLine":8,"endColumn":111},{"ruleId":"141","severity":1,"message":"187","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"188","line":3,"column":23,"nodeType":"143","messageId":"144","endLine":3,"endColumn":33},{"ruleId":"141","severity":1,"message":"189","line":3,"column":35,"nodeType":"143","messageId":"144","endLine":3,"endColumn":48},{"ruleId":"141","severity":1,"message":"190","line":4,"column":20,"nodeType":"143","messageId":"144","endLine":4,"endColumn":29},{"ruleId":"141","severity":1,"message":"191","line":8,"column":12,"nodeType":"143","messageId":"144","endLine":8,"endColumn":23},{"ruleId":"141","severity":1,"message":"192","line":8,"column":25,"nodeType":"143","messageId":"144","endLine":8,"endColumn":39},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'SuperHeroMovies' is defined but never used.","'current' is assigned a value but never used.","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'day' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'guess' is assigned a value but never used.","'setGuess' is assigned a value but never used.","'director' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'correctID' and 'guessCount'. Either include them or remove the dependency array.","ArrayExpression",["193"],"'WinPage' is defined but never used.","React Hook useEffect has a missing dependency: 'props.guessCount'. Either include it or remove the dependency array.",["194"],["195"],"React Hook useEffect has a missing dependency: 'props.correctActors'. Either include it or remove the dependency array.",["196"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["197","198"],["199"],["200","201"],["202"],["203","204"],["205"],["206","207"],["208"],["209","210"],["211"],["212","213"],["214"],["215","216"],["217"],["218","219"],"'Settings' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FaToggleOff' is defined but never used.","'FaToggleOn' is defined but never used.","'FaWindowClose' is defined but never used.","'useEffect' is defined but never used.","'superToggle' is assigned a value but never used.","'setSuperToggle' is assigned a value but never used.",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"222","fix":"224"},{"desc":"225","fix":"226"},{"messageId":"227","fix":"228","desc":"229"},{"messageId":"230","fix":"231","desc":"232"},{"desc":"225","fix":"233"},{"messageId":"227","fix":"234","desc":"229"},{"messageId":"230","fix":"235","desc":"232"},{"desc":"225","fix":"236"},{"messageId":"227","fix":"237","desc":"229"},{"messageId":"230","fix":"238","desc":"232"},{"desc":"225","fix":"239"},{"messageId":"227","fix":"240","desc":"229"},{"messageId":"230","fix":"241","desc":"232"},{"desc":"225","fix":"242"},{"messageId":"227","fix":"243","desc":"229"},{"messageId":"230","fix":"244","desc":"232"},{"desc":"225","fix":"245"},{"messageId":"227","fix":"246","desc":"229"},{"messageId":"230","fix":"247","desc":"232"},{"desc":"225","fix":"248"},{"messageId":"227","fix":"249","desc":"229"},{"messageId":"230","fix":"250","desc":"232"},{"desc":"225","fix":"251"},{"messageId":"227","fix":"252","desc":"229"},{"messageId":"230","fix":"253","desc":"232"},"Update the dependencies array to be: [correctID, guessCount, guessMovieID]",{"range":"254","text":"255"},"Update the dependencies array to be: [props.guessCount, props.movieID]",{"range":"256","text":"257"},{"range":"258","text":"257"},"Update the dependencies array to be: [props.actors, props.correctActors]",{"range":"259","text":"260"},"removeEscape",{"range":"261","text":"262"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"263","text":"264"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"265","text":"260"},{"range":"266","text":"262"},{"range":"267","text":"264"},{"range":"268","text":"260"},{"range":"269","text":"262"},{"range":"270","text":"264"},{"range":"271","text":"260"},{"range":"272","text":"262"},{"range":"273","text":"264"},{"range":"274","text":"260"},{"range":"275","text":"262"},{"range":"276","text":"264"},{"range":"277","text":"260"},{"range":"278","text":"262"},{"range":"279","text":"264"},{"range":"280","text":"260"},{"range":"281","text":"262"},{"range":"282","text":"264"},{"range":"283","text":"260"},{"range":"284","text":"262"},{"range":"285","text":"264"},[5449,5463],"[correctID, guessCount, guessMovieID]",[6242,6257],"[props.guessCount, props.movieID]",[11189,11204],[496,510],"[props.actors, props.correctActors]",[1090,1091],"",[1090,1090],"\\",[492,506],[1084,1085],[1084,1084],[492,506],[1084,1085],[1084,1084],[483,497],[1072,1073],[1072,1072],[496,510],[1090,1091],[1090,1090],[488,502],[1078,1079],[1078,1078],[496,510],[1090,1091],[1090,1090],[488,502],[1078,1079],[1078,1078]]